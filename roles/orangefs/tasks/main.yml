---
- name: update hosts to make sure names will resolve in hosts file
  lineinfile:
    dest: /etc/hosts
    line: "{{ hostvars[item]['ansible_default_ipv4']['address'] }} {{ hostvars[item].inventory_hostname }}"
    state: present
  with_items: "{{ groups['orange-all'] }}"


- name: Generate config file
  command: pvfs2-genconfig --quiet --protocol tcp --ioservers "{{ groups['orange-data'] | join(',') }}" --metaservers "{{ groups['orange-data'] |join(',') }}" --storage /export/orangefs /etc/pvfs2.conf creates=/etc/pvfs2.conf
  become: true

- name: update storage path
  lineinfile:
    path: /etc/pvfs2.conf
    regexp: 'DataStorageSpace /export/orangefs'
    line: ' 	DataStorageSpace /export/orangefs/data'

- name: update storage path
  lineinfile:
    path: /etc/pvfs2.conf
    regexp: 'MetadataStorageSpace /export/orangefs'
    line: ' 	MetadataStorageSpace /export/orangefs/meta'

- name: probe the orangefs module
  modprobe:
    name: orangefs
    state: present

- name: format pvfs2 storage
  command: pvfs2-server -f -a "{{ inventory_hostname }}" /etc/pvfs2.conf creates=/export/orangefs/data
  when: inventory_hostname in groups['orange-data']
  
- name: start pvfs2 server
  systemd:
    name: orangefs
    state: started
  when: inventory_hostname in groups['orange-data']

- name: start pvfs2 client
  systemd:
    name: orangefs_client
    state: started
  when: inventory_hostname in groups['orange-client']

- name: create mountpoint scratch
  file: path=/scratch state=directory
  when: inventory_hostname in groups['orange-client']

- name: run the mount comand
  command: "mount -t pvfs2 tcp://{{ groups['orange-data'] |join('') }}:3334/orangefs /scratch"
  become: true
  when: inventory_hostname in groups['orange-client']
